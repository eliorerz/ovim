# Multi-stage build for OVIM Spoke Agent
FROM golang:1.24-alpine AS builder

WORKDIR /app

# Install dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the spoke agent binary
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -a -installsuffix cgo \
    -ldflags="-w -s -X main.Version=v1.0.0" \
    -o ovim_spoke_agent ./cmd/ovim-spoke-agent

# Final stage - minimal runtime image
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata curl

# Create non-root user for security
RUN addgroup -g 1000 ovim && \
    adduser -D -u 1000 -G ovim ovim

WORKDIR /app

# Copy the binary
COPY --from=builder /app/ovim_spoke_agent /usr/local/bin/ovim_spoke_agent

# Set ownership and permissions
RUN chown root:root /usr/local/bin/ovim_spoke_agent && \
    chmod +x /usr/local/bin/ovim_spoke_agent

# Switch to non-root user
USER ovim

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default environment variables
ENV OVIM_LOG_LEVEL=info
ENV OVIM_LOG_FORMAT=json
ENV OVIM_API_ENABLED=true
ENV OVIM_API_ADDRESS=0.0.0.0
ENV OVIM_API_PORT=8080
ENV OVIM_HUB_PROTOCOL=http
ENV OVIM_HUB_TLS_ENABLED=false
ENV OVIM_METRICS_ENABLED=true
ENV OVIM_HEALTH_ENABLED=true

# Expose the local API port
EXPOSE 8080

# Default command
CMD ["ovim_spoke_agent"]